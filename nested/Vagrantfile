# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "fedora/27-cloud-base"
 
  # use libvirt
  config.vm.provider "libvirt" do |lv|
    # Customize the amount of memory on the VM and to support nested virtualization
    lv.memory = "2048"
    lv.nested = true
    lv.cpus = 2
    lv.cpu_mode = "host-passthrough"
    # following is needed to prevent the eth0 reuse issue
    # taken from here: http://nts.strzibny.name/inception-running-vagrant-inside-vagrant-with-kvm/
    lv.management_network_name = 'vagrant-libvirt-new'
    lv.management_network_address = '192.168.124.0/24'
  end

  # machine level provisioning
  config.vm.provision "shell", inline: <<-SHELL
    dnf install -y vagrant
    usermod -aG libvirt vagrant
    systemctl enable libvirtd
    systemctl start libvirtd
  SHELL
  config.vm.provision "file", source: "./Vagrantfile.inner", destination: "Vagrantfile"
end

